name: Release Project

on:
  workflow_call:
    inputs:
      module_name:
        description: "Name of the published module."
        required: true
        type: string
      publish_output_folder:
        required: true
        type: string
        description: "Directory where the ouputs of dotnet publish command will be present."
      project_path:
        required: true
        type: string
        description: "Path to project file being published."
      artifact_retention_days:
        type: number
        default: 14
        required: false
      runtime:
        type: string
        default: ""
        required: false
      configuration:
        type: string
        default: 'Release'
        required: false
      checkout_submodules:
        type: boolean
        default: false
        required: false
      version_affix:
        type: string
        default: ""
        required: false
      environment:
        type: string
        default: ""
        required: false
      publish_extra_commands:
        type: string
        default: ""
        required: false
      dotnet_version:
        type: string
        default: "6.0.x"
        required: false
    outputs:
      artifact_name:
        description: "Name of the generated artifact"
        value: ${{ jobs.publish_job.outputs.artifact_name }}

jobs:
  publish_job:

    runs-on: [self-hosted, windows, x64, testing]

    outputs:
        artifact_name: ${{ env.ARTIFACT_NAME }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      if: ${{ inputs.checkout_submodules == false }}
      
    - name: Checkout with Submodules
      uses: actions/checkout@v4
      if: ${{ inputs.checkout_submodules == true }}
      with:
        submodules: true
        token: ${{ secrets.CI_TOKEN }}
      
    - name: Set Variable VERSION
      run: |
         chcp 65001 #set code page to utf-8
         $ver = $env:GITHUB_REF
         echo ("Original GitHub ref: " + $ver)
         $ver = $ver.replace('refs/tags/v', '')
         echo ("VERSION=" + $ver) >> $env:GITHUB_ENV
         echo ("Set VERSION variable to: " + $ver)
     
    - name: Add VERSION affix
      if: ${{ inputs.version_affix != '' }}
      run: |
        $ver = '${{ env.VERSION }}'
        $ver = $ver + '-${{ inputs.version_affix }}'
        echo ("VERSION=" + $ver) >> $env:GITHUB_ENV
        echo ("Update VERSION variable to: " + $ver)
         
    - name: Set Variable ARTIFACT_NAME
      run: |
         chcp 65001 #set code page to utf-8
         $artifact_name = '${{ inputs.module_name }}' + '_publish_v' + $env:VERSION
         echo ("ARTIFACT_NAME=" + $artifact_name) >> $env:GITHUB_ENV
         echo ("Set ARTIFACT_NAME variable to: " + $artifact_name)
         
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}
        
    - name: Restore dependencies
      if: ${{ inputs.runtime == '' }}
      run: dotnet restore
      
    - name: Restore dependencies with Runtime
      if: ${{ inputs.runtime != '' }}
      run: dotnet restore --runtime ${{ inputs.runtime }}
      
    - name: Build
      run: dotnet build -c ${{ inputs.configuration }} --no-restore /p:Version=${{ env.VERSION }}
      
    - name: Publish
      if: ${{ inputs.runtime == '' && inputs.environment == '' }}
      run: dotnet publish ${{ inputs.project_path }} -c ${{ inputs.configuration }} --no-restore -o ${{ inputs.publish_output_folder }} /p:Version=${{ env.VERSION }} --no-self-contained --nologo ${{ inputs.publish_extra_commands }}
      
    - name: Publish with Runtime
      if: ${{ inputs.runtime != '' && inputs.environment == '' }}
      run: dotnet publish ${{ inputs.project_path }} -c ${{ inputs.configuration }} --no-restore -o ${{ inputs.publish_output_folder }} /p:Version=${{ env.VERSION }} --runtime ${{ inputs.runtime }} --no-self-contained --nologo ${{ inputs.publish_extra_commands }}
      
    - name: Publish with Environment
      if: ${{ inputs.runtime == '' && inputs.environment != '' }}
      run: dotnet publish ${{ inputs.project_path }} -c ${{ inputs.configuration }} --no-restore -o ${{ inputs.publish_output_folder }} /p:Version=${{ env.VERSION }} /p:EnvironmentName=${{ inputs.environment }} --no-self-contained --nologo ${{ inputs.publish_extra_commands }}
      
    - name: Publish with Environment and Runtime
      if: ${{ inputs.runtime != '' && inputs.environment != '' }}
      run: dotnet publish ${{ inputs.project_path }} -c ${{ inputs.configuration }} --no-restore -o ${{ inputs.publish_output_folder }} /p:Version=${{ env.VERSION }} /p:EnvironmentName=${{ inputs.environment }} --runtime ${{ inputs.runtime }} --no-self-contained --nologo ${{ inputs.publish_extra_commands }}

    - name: Create Artifacts
      uses: actions/upload-artifact@v4
      with: 
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ inputs.publish_output_folder }}
          if-no-files-found: error
          retention-days: ${{ inputs.artifact_retention_days }}
